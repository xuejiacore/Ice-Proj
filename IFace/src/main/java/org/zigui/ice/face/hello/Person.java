// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `ComplexInterface.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package org.zigui.ice.face.hello;

public class Person implements java.lang.Cloneable, java.io.Serializable
{
    public String name;

    public int age;

    public Color color;

    public Person()
    {
        name = "";
        color = Color.Red;
    }

    public Person(String name, int age, Color color)
    {
        this.name = name;
        this.age = age;
        this.color = color;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Person _r = null;
        if(rhs instanceof Person)
        {
            _r = (Person)rhs;
        }

        if(_r != null)
        {
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(age != _r.age)
            {
                return false;
            }
            if(color != _r.color)
            {
                if(color == null || _r.color == null || !color.equals(_r.color))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::hello::Person");
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, age);
        __h = IceInternal.HashUtil.hashAdd(__h, color);
        return __h;
    }

    public Person
    clone()
    {
        Person c = null;
        try
        {
            c = (Person)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(name);
        __os.writeInt(age);
        Color.__write(__os, color);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        name = __is.readString();
        age = __is.readInt();
        color = Color.__read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, Person __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public Person
    __read(IceInternal.BasicStream __is, Person __v)
    {
        if(__v == null)
        {
             __v = new Person();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final Person __nullMarshalValue = new Person();

    public static final long serialVersionUID = 1431427938L;
}
