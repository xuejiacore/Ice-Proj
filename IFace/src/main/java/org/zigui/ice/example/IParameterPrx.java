// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `parameter.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package org.zigui.ice.example;

/**
 * 输入输出参数
 **/
public interface IParameterPrx extends Ice.ObjectPrx
{
    /**
     * 单纯使用一个返回值的方式
     **/
    public boolean reg(String name, int age);

    /**
     * 单纯使用一个返回值的方式
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean reg(String name, int age, java.util.Map<String, String> __ctx);

    /**
     * 单纯使用一个返回值的方式
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, int age);

    /**
     * 单纯使用一个返回值的方式
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, int age, java.util.Map<String, String> __ctx);

    /**
     * 单纯使用一个返回值的方式
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, int age, Ice.Callback __cb);

    /**
     * 单纯使用一个返回值的方式
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, int age, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 单纯使用一个返回值的方式
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, int age, Callback_IParameter_reg __cb);

    /**
     * 单纯使用一个返回值的方式
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, int age, java.util.Map<String, String> __ctx, Callback_IParameter_reg __cb);

    /**
     * 单纯使用一个返回值的方式
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, 
                                     int age, 
                                     IceInternal.Functional_BoolCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 单纯使用一个返回值的方式
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, 
                                     int age, 
                                     IceInternal.Functional_BoolCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                     IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 单纯使用一个返回值的方式
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, 
                                     int age, 
                                     java.util.Map<String, String> __ctx, 
                                     IceInternal.Functional_BoolCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 单纯使用一个返回值的方式
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_reg(String name, 
                                     int age, 
                                     java.util.Map<String, String> __ctx, 
                                     IceInternal.Functional_BoolCallback __responseCb, 
                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                     IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 单纯使用一个返回值的方式
     * @param __result The asynchronous result object.
     **/
    public boolean end_reg(Ice.AsyncResult __result);

    /**
     * 使用带输出参数的形式
     **/
    public void unReg(String name, Ice.IntHolder count, Ice.BooleanHolder successful);

    /**
     * 使用带输出参数的形式
     * @param __ctx The Context map to send with the invocation.
     **/
    public void unReg(String name, Ice.IntHolder count, Ice.BooleanHolder successful, java.util.Map<String, String> __ctx);

    /**
     * 使用带输出参数的形式
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name);

    /**
     * 使用带输出参数的形式
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, java.util.Map<String, String> __ctx);

    /**
     * 使用带输出参数的形式
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, Ice.Callback __cb);

    /**
     * 使用带输出参数的形式
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 使用带输出参数的形式
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, Callback_IParameter_unReg __cb);

    /**
     * 使用带输出参数的形式
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, java.util.Map<String, String> __ctx, Callback_IParameter_unReg __cb);

    public interface FunctionalCallback_IParameter_unReg_Response
    {
        void apply(int count, boolean successful);
    }

    /**
     * 使用带输出参数的形式
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, 
                                       FunctionalCallback_IParameter_unReg_Response __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 使用带输出参数的形式
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, 
                                       FunctionalCallback_IParameter_unReg_Response __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 使用带输出参数的形式
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, 
                                       java.util.Map<String, String> __ctx, 
                                       FunctionalCallback_IParameter_unReg_Response __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 使用带输出参数的形式
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_unReg(String name, 
                                       java.util.Map<String, String> __ctx, 
                                       FunctionalCallback_IParameter_unReg_Response __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 使用带输出参数的形式
     * @param __result The asynchronous result object.
     **/
    public void end_unReg(Ice.IntHolder count, Ice.BooleanHolder successful, Ice.AsyncResult __result);
}
